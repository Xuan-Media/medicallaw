// Extracted scripts from index.html
document.addEventListener('DOMContentLoaded', function() {
    window.addEventListener('scroll', () => { const scrollableHeight = document.documentElement.scrollHeight - window.innerHeight; const scrolled = (window.scrollY / scrollableHeight) * 100; document.getElementById('progress-bar').style.width = scrolled + '%'; });
    particlesJS('particles-js', {"particles":{"number":{"value":50,"density":{"enable":true,"value_area":800}},"color":{"value":["#0a2540","#14b8a6"]},"shape":{"type":"circle"},"opacity":{"value":0.6,"random":true},"size":{"value":3,"random":true},"line_linked":{"enable":true,"distance":150,"color":"#0d3b66","opacity":0.2,"width":1},"move":{"enable":true,"speed":1.5,"direction":"none","random":true,"straight":false,"out_mode":"out","bounce":false}},"interactivity":{"detect_on":"canvas","events":{"onhover":{"enable":true,"mode":"grab"},"onclick":{"enable":false},"resize":true},"modes":{"grab":{"distance":140,"line_linked":{"opacity":0.4}}}},"retina_detect":true});
    const mobileMenuButton = document.getElementById('mobile-menu-button'); const mobileMenu = document.getElementById('mobile-menu'); mobileMenuButton.addEventListener('click', () => { mobileMenu.classList.toggle('hidden'); }); mobileMenu.addEventListener('click', () => { mobileMenu.classList.add('hidden'); });
    const countdownDate = new Date("Nov 21, 2025 07:30:00").getTime(); const timer = setInterval(function() { const now = new Date().getTime(); const distance = countdownDate - now; document.getElementById('days').innerText = Math.floor(distance / 864e5).toString().padStart(2, '0'); document.getElementById('hours').innerText = Math.floor((distance % 864e5) / 36e5).toString().padStart(2, '0'); document.getElementById('minutes').innerText = Math.floor((distance % 36e5) / 6e4).toString().padStart(2, '0'); document.getElementById('seconds').innerText = Math.floor((distance % 6e4) / 1000).toString().padStart(2, '0'); if (distance < 0) { clearInterval(timer); document.getElementById('countdown').innerHTML = "<div class='col-span-4 text-2xl font-bold text-brand-navy'>Sự kiện đã diễn ra!</div>"; } }, 1000);
    const form = document.getElementById('registration-form'); const formMessage = document.getElementById('form-message'); const submitBtn = document.getElementById('submit-btn'); const btnText = submitBtn.querySelector('.btn-text'); const loader = submitBtn.querySelector('.loader');
    form.addEventListener('submit', async function(e) { e.preventDefault(); submitBtn.disabled = true; btnText.classList.add('opacity-50'); loader.classList.remove('hidden'); const inputs = form.querySelectorAll('input, select'); const [nameInput, positionInput, emailInput, phoneInput, addressInput, questionInput, typeSelect, needSelect] = inputs; const data = { name: nameInput.value.trim(), position: positionInput.value.trim(), email: emailInput.value.trim(), phone: phoneInput.value.trim(), address: addressInput.value.trim(), question: questionInput.value.trim(), type: typeSelect.options[typeSelect.selectedIndex].text, need: needSelect.options[needSelect.selectedIndex].text }; try { const res = await fetch('https://api.xuan.media/send_mail', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(data) }); if (res.ok) { formMessage.textContent = 'Cảm ơn bạn đã đăng ký! Đang chuyển hướng đến trang thanh toán...'; formMessage.className = 'block text-center p-3 rounded-md bg-green-100 text-green-800'; form.reset(); setTimeout(() => { window.location.href = 'payment.html'; }, 1000); } else { formMessage.textContent = 'Đăng ký thất bại. Vui lòng thử lại hoặc liên hệ BTC.'; formMessage.className = 'block text-center p-3 rounded-md bg-red-100 text-red-800'; } } catch (err) { formMessage.textContent = 'Không thể kết nối máy chủ. Vui lòng thử lại sau.'; formMessage.className = 'block text-center p-3 rounded-md bg-red-100 text-red-800'; } finally { submitBtn.disabled = false; btnText.classList.remove('opacity-50'); loader.classList.add('hidden'); } });
    class IntegratedSlideshow { constructor() { this.slides = document.querySelectorAll('.slide'); this.indicators = document.querySelectorAll('.slideshow-indicators .indicator'); this.prevBtn = document.getElementById('slideshowPrevBtn'); this.nextBtn = document.getElementById('slideshowNextBtn'); this.currentSlide = 0; this.totalSlides = this.slides.length; this.autoSlideInterval = null; this.init(); } init() { this.bindEvents(); this.startAutoSlide(); this.updateSlide(); } bindEvents() { this.prevBtn.addEventListener('click', () => this.prevSlide()); this.nextBtn.addEventListener('click', () => this.nextSlide()); this.indicators.forEach((indicator, index) => { indicator.addEventListener('click', () => this.goToSlide(index)); }); const slideshow = document.querySelector('.integrated-slideshow'); slideshow.addEventListener('mouseenter', () => this.stopAutoSlide()); slideshow.addEventListener('mouseleave', () => this.startAutoSlide()); } updateSlide() { this.slides.forEach(slide => { slide.classList.remove('active'); }); this.slides[this.currentSlide].classList.add('active'); this.indicators.forEach((indicator, index) => { indicator.classList.toggle('active', index === this.currentSlide); }); } nextSlide() { this.currentSlide = (this.currentSlide + 1) % this.totalSlides; this.updateSlide(); } prevSlide() { this.currentSlide = (this.currentSlide - 1 + this.totalSlides) % this.totalSlides; this.updateSlide(); } goToSlide(index) { this.currentSlide = index; this.updateSlide(); } startAutoSlide() { this.stopAutoSlide(); this.autoSlideInterval = setInterval(() => { this.nextSlide(); }, 4000); } stopAutoSlide() { if (this.autoSlideInterval) { clearInterval(this.autoSlideInterval); this.autoSlideInterval = null; } } }
    new IntegratedSlideshow();
    const conferenceImages = ['./assets/imgs/benhvien/hoanmy.png','./assets/imgs/benhvien/nhatrang.png','./assets/imgs/benhvien/vinmec.jpg','./assets/imgs/benhvien/phuongdong.png','./assets/imgs/benhvien/qn.png','./assets/imgs/benhvien/thienhanh.png','./assets/imgs/benhvien/HAGL-01.png','./assets/imgs/benhvien/TTH-01.png','./assets/imgs/benhvien/ne.jpg'];
    if (window.innerWidth >= 768) { new DesktopCarousel('carouselContainerDesktop', conferenceImages); } else { new MobileCarousel('carouselContainer', conferenceImages); }
    let resizeTimer; window.addEventListener('resize', () => { clearTimeout(resizeTimer); resizeTimer = setTimeout(() => { location.reload(); }, 250); });
    gsap.registerPlugin(ScrollTrigger); document.querySelectorAll('section h2').forEach(h => { gsap.from(h, { opacity: 0, y: 20, duration: 0.8, ease: 'power2.out', scrollTrigger: { trigger: h, start: 'top 85%', once: true } }); });
    gsap.set('.hero-content > *', { autoAlpha: 1 }); const heroTimeline = gsap.timeline({ defaults: { ease: 'power3.out' } }); heroTimeline.fromTo('.hero-content > h1', { y: -20, autoAlpha: 0 }, { y: 0, autoAlpha: 1, duration: 0.8 }).fromTo('.hero-content p.timetable', { y: 10, autoAlpha: 0 }, { y: 0, autoAlpha: 1, duration: 1 }, "-=0.4").fromTo('.hero-content > p:nth-of-type(2)', { y: 20, autoAlpha: 0 }, { y: 0, autoAlpha: 1, duration: 0.8 }, "-=0.6").fromTo('#countdown > div', { y: 20, autoAlpha: 0 }, { y: 0, autoAlpha: 1, duration: 0.6, stagger: 0.1 }, "-=0.5").fromTo('.hero-content > a', { scale: 0.95, autoAlpha: 0 }, { scale: 1, autoAlpha: 1, duration: 0.6 }, "-=0.4");
    const animatedGrids = ['#thong-tin-chinh > div','#chuong-trinh .space-y-4 > div','#dien-gia .grid > div','.integrated-slideshow','#quyen-loi .grid > div','#ve-moi .grid > div','#tai-tro .grid > div']; animatedGrids.forEach(selector => { gsap.set(selector, { autoAlpha: 0, y: 40 }); ScrollTrigger.create({ trigger: selector, start: 'top 90%', onEnter: () => gsap.to(selector, { autoAlpha: 1, y: 0, duration: 0.8, stagger: 0.15, ease: 'power3.out' }), once: true }); });
});

// DesktopCarousel and MobileCarousel classes preserved from original inline code
class DesktopCarousel { constructor(containerId, images) { this.container = document.getElementById(containerId); this.images = images; this.currentIndex = 0; this.isAnimating = false; this.init(); } init() { this.createIndicators(); this.bindEvents(); this.loadImages(); this.updateCarousel(); } loadImages() { const images = this.container.querySelectorAll('img[data-src]'); images.forEach(img => { const observer = new IntersectionObserver((entries) => { entries.forEach(entry => { if (entry.isIntersecting) { const imgElement = entry.target; const src = imgElement.getAttribute('data-src'); if (src) { imgElement.src = src; imgElement.onload = () => imgElement.classList.add('loaded'); imgElement.removeAttribute('data-src'); observer.unobserve(imgElement); } } }); }); observer.observe(img); }); } createIndicators() { const indicatorsContainer = document.getElementById('indicatorsDesktop'); this.images.forEach((_, index) => { const indicator = document.createElement('div'); indicator.className = `carousel-indicator ${index === this.currentIndex ? 'active' : ''}`; indicator.addEventListener('click', () => this.goToSlide(index)); indicatorsContainer.appendChild(indicator); }); } bindEvents() { document.getElementById('prevBtnDesktop').addEventListener('click', () => this.prev()); document.getElementById('nextBtnDesktop').addEventListener('click', () => this.next()); setInterval(() => this.next(), 5000); } updateCarousel() { const slides = this.container.querySelectorAll('.carousel-slide-desktop'); const indicators = document.querySelectorAll('#indicatorsDesktop .carousel-indicator'); slides.forEach((slide, index) => { slide.classList.remove('left', 'center', 'right'); const diff = index - this.currentIndex; const totalImages = this.images.length; let position; if (diff === 0) { position = 'center'; } else if (diff === 1 || (diff === -(totalImages - 1))) { position = 'right'; } else if (diff === -1 || (diff === totalImages - 1)) { position = 'left'; } else { position = 'hidden'; } if (position !== 'hidden') { slide.classList.add(position); slide.style.display = 'block'; } else { slide.style.display = 'none'; } }); indicators.forEach((indicator, index) => { indicator.classList.toggle('active', index === this.currentIndex); }); } next() { if (this.isAnimating) return; this.isAnimating = true; this.currentIndex = (this.currentIndex + 1) % this.images.length; this.updateCarousel(); setTimeout(() => this.isAnimating = false, 500); } prev() { if (this.isAnimating) return; this.isAnimating = true; this.currentIndex = (this.currentIndex - 1 + this.images.length) % this.images.length; this.updateCarousel(); setTimeout(() => this.isAnimating = false, 500); } goToSlide(index) { if (this.isAnimating || index === this.currentIndex) return; this.isAnimating = true; this.currentIndex = index; this.updateCarousel(); setTimeout(() => this.isAnimating = false, 500); } }
class MobileCarousel { constructor(containerId, images) { this.container = document.getElementById(containerId); this.images = images; this.currentIndex = 0; this.isAnimating = false; this.init(); } init() { this.createIndicators(); this.bindEvents(); this.updateCarousel(); } createIndicators() { const indicatorsContainer = document.getElementById('indicators'); this.images.forEach((_, index) => { const indicator = document.createElement('div'); indicator.className = `carousel-indicator ${index === this.currentIndex ? 'active' : ''}`; indicator.addEventListener('click', () => this.goToSlide(index)); indicatorsContainer.appendChild(indicator); }); } bindEvents() { document.getElementById('prevBtn').addEventListener('click', () => this.prev()); document.getElementById('nextBtn').addEventListener('click', () => this.next()); let startX = 0; this.container.addEventListener('touchstart', (e) => { startX = e.touches[0].clientX; }); this.container.addEventListener('touchend', (e) => { let endX = e.changedTouches[0].clientX; const diff = startX - endX; if (Math.abs(diff) > 50) { if (diff > 0) this.next(); else this.prev(); } }); setInterval(() => this.next(), 5000); } updateCarousel() { const slides = this.container.querySelectorAll('.carousel-slide'); const indicators = document.querySelectorAll('#indicators .carousel-indicator'); slides.forEach((slide, index) => { const isActive = index === this.currentIndex; slide.classList.toggle('active', isActive); if (isActive) { const img = slide.querySelector('img[data-src]'); if (img) { const src = img.getAttribute('data-src'); img.src = src; img.onload = () => img.classList.add('loaded'); img.removeAttribute('data-src'); } } }); indicators.forEach((indicator, index) => { indicator.classList.toggle('active', index === this.currentIndex); }); } next() { if (this.isAnimating) return; this.isAnimating = true; this.currentIndex = (this.currentIndex + 1) % this.images.length; this.updateCarousel(); setTimeout(() => this.isAnimating = false, 500); } prev() { if (this.isAnimating) return; this.isAnimating = true; this.currentIndex = (this.currentIndex - 1 + this.images.length) % this.images.length; this.updateCarousel(); setTimeout(() => this.isAnimating = false, 500); } goToSlide(index) { if (this.isAnimating || index === this.currentIndex) return; this.isAnimating = true; this.currentIndex = index; this.updateCarousel(); setTimeout(() => this.isAnimating = false, 500); } }


